{"version":3,"sources":["components/currentWeather/description/description__card/descriptionList/descriptionListItem/descriptionListItem.module.scss","components/currentWeather/description/description__card/descriptionList/descriptionList.module.scss","components/currentWeather/description/description__card/ImageField/ImageField.module.scss","components/currentWeather/description/description__header/description__header.module.scss","components/currentWeather/header/header.module.scss","components/currentWeather/search/search.module.scss","components/currentWeather/currentWeather.module.scss","components/hourlyForecast/forecastList/forecastListItem/imageField/ImageField.module.scss","components/hourlyForecast/forecastList/forecastListItem/dateField/dateField.module.scss","components/hourlyForecast/forecastList/forecastListItem/dataListField/dataListField.module.scss","components/hourlyForecast/forecastList/forecastListItem/dataListField/dataListFieldItem/dataListFieldItem.module.scss","components/hourlyForecast/forecastList/forecastListItem/forecastListItem.module.scss","components/hourlyForecast/forecastList/forecastList.module.scss","components/loader/loader.module.scss","components/hourlyForecast/hourlyForecast.module.scss","hooks/useCurrentLocation.tsx","services/requestCurrentWeather.tsx","services/requestWeatherByCity.tsx","context/context.tsx","assets/sprite.svg","components/currentWeather/description/description__card/descriptionList/descriptionListItem/descriptionListItem.tsx","components/currentWeather/description/description__card/descriptionList/descriptionList.tsx","components/currentWeather/description/description__card/ImageField/ImageField.tsx","components/currentWeather/description/description__card/TemperatuteField/temperatuteField.tsx","components/currentWeather/description/description__card/description__card.tsx","components/currentWeather/description/description__header/description__header.tsx","components/currentWeather/description/description.tsx","components/currentWeather/header/header.tsx","components/currentWeather/search/search.tsx","components/currentWeather/currentWeather.tsx","components/dots/dots.tsx","components/hourlyForecast/forecastHeader/ForecastHeader.tsx","components/hourlyForecast/forecastList/forecastListItem/imageField/ImageField.tsx","components/hourlyForecast/forecastList/forecastListItem/dateField/dateField.tsx","components/hourlyForecast/forecastList/forecastListItem/dataListField/dataListFieldItem/dataListFieldItem.tsx","components/hourlyForecast/forecastList/forecastListItem/dataListField/dataListField.tsx","components/hourlyForecast/forecastList/forecastListItem/forecastListItem.tsx","components/loader/loader.tsx","components/hourlyForecast/forecastList/forecastList.tsx","components/hourlyForecast/hourlyForecast.tsx","constant/option.tsx","constant/defaultCoords.tsx","constant/quantityOfDots.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","useCurrentLocation","options","useState","location","setLocation","error","setError","handleSuccess","pos","coords","lat","latitude","lon","longitude","handleError","message","useEffect","geolocation","navigator","getCurrentPosition","API_key","URL","getWeather","a","fetch","response","json","data","result","console","delay","ms","Promise","resolve","setTimeout","getWet","city","Context","React","createContext","dataCity","dataPosition","undefined","updateData","value","warn","loading","DescriptionListItem","firstFieldName","secondFieldName","rotate","toFixed","String","fromCharCode","Date","toLocaleTimeString","className","style","transform","href","sprite","DescriptionList","title","useContext","temperatureArray","sunArray","windArray","visibilityArray","cloudArray","Object","entries","main","filter","item","sys","wind","clouds","map","index","ImageField","icon","weather","text","src","alt","TemperatuteField","temp","DescriptionCard","DescriptionHeader","date","dt","name","toLocaleDateString","now","Description","Header","data-text","SearchForm","setValue","onSubmit","event","preventDefault","trim","type","placeholder","onChange","target","CurrentWeather","Dots","ForecastHeader","description","DateField","innerData","toLocaleString","dateTime","DataListFieldItem","nameOfFields","valueOfField","DataListField","innerHeaderField","innerItemFieldArray","ForecastListItem","dateData","imageData","values","Loader","ForecastList","quantityOfCards","list","slice","HourlyForecast","geolocationOptions","enableHighAccuracy","timeout","maximumAge","defaultCoords","dots","array","push","App","currentLocation","currentError","setDataPosition","setDataCity","setLoading","then","cod","log","catch","e","Provider","x","coord","res","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebb84e9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__description-item\":\"descriptionListItem_list__description-item__2210z\",\"icon\":\"descriptionListItem_icon__3ymP9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__description-item\":\"descriptionList_list__description-item__1C3e6\",\"icon\":\"descriptionList_icon__3-Dg0\",\"list__description\":\"descriptionList_list__description__1bx8j\",\"list__description-title\":\"descriptionList_list__description-title__1fO4e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image-field\":\"ImageField_image-field__2il8x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__description-header\":\"description__header_content__description-header__20Q8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__header\":\"header_content__header__13A8l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__search\":\"search_content__search__WjBmI\",\"search__box\":\"search_search__box__1xqUL\",\"search__box-input\":\"search_search__box-input__1a1AM\",\"search__box-button\":\"search_search__box-button__3nS-6\",\"search__box-icon\":\"search_search__box-icon__cuEtG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__header\":\"currentWeather_content__header__2tZJ2\",\"content__search\":\"currentWeather_content__search__1zfid\",\"search__box\":\"currentWeather_search__box__3NnNn\",\"search__box-input\":\"currentWeather_search__box-input__-gHKb\",\"search__box-button\":\"currentWeather_search__box-button__1zQIm\",\"search__box-icon\":\"currentWeather_search__box-icon__2lWqX\",\"image-field\":\"currentWeather_image-field__3R0Za\",\"temperature\":\"currentWeather_temperature__jpShy\",\"list__description-item\":\"currentWeather_list__description-item__19oS-\",\"icon\":\"currentWeather_icon__1s99H\",\"list__description\":\"currentWeather_list__description__QUmeW\",\"list__description-title\":\"currentWeather_list__description-title__1YSMk\",\"content__description-card\":\"currentWeather_content__description-card__2lWh-\",\"content__description\":\"currentWeather_content__description__1on7s\",\"content__description-header\":\"currentWeather_content__description-header__1K6ct\",\"content\":\"currentWeather_content__31XyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards__image\":\"ImageField_cards__image__2NSYV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards__header\":\"dateField_cards__header__GMDsR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards__list-item\":\"dataListField_cards__list-item__2Xt0y\",\"icon\":\"dataListField_icon__3v8eI\",\"cards__list\":\"dataListField_cards__list__3eEcS\",\"cards__list-header\":\"dataListField_cards__list-header__HuQFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards__list-item\":\"dataListFieldItem_cards__list-item__38xe7\",\"icon\":\"dataListFieldItem_icon__2EqQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards__header\":\"forecastListItem_cards__header__1iLH5\",\"cards__image\":\"forecastListItem_cards__image__9D89O\",\"cards__list-item\":\"forecastListItem_cards__list-item__HjM0_\",\"icon\":\"forecastListItem_icon__232AB\",\"cards__list\":\"forecastListItem_cards__list__3nXwg\",\"cards__list-header\":\"forecastListItem_cards__list-header__1kKXs\",\"cards\":\"forecastListItem_cards__3U0aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards__header\":\"forecastList_cards__header__2iCJG\",\"cards__image\":\"forecastList_cards__image__GD6cO\",\"cards__list-item\":\"forecastList_cards__list-item__2Lkro\",\"icon\":\"forecastList_icon__CieI7\",\"cards__list\":\"forecastList_cards__list__3qMXO\",\"cards__list-header\":\"forecastList_cards__list-header__2ypZY\",\"cards\":\"forecastList_cards__3C09m\",\"content-cards-list\":\"forecastList_content-cards-list__1PwD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cssload-wrap\":\"loader_cssload-wrap__1QlHq\",\"cssload-circle\":\"loader_cssload-circle__3CEGS\",\"cssload-spin\":\"loader_cssload-spin__2dui9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards__header\":\"hourlyForecast_cards__header__17rH2\",\"cards__image\":\"hourlyForecast_cards__image__1_CrX\",\"cards__list-item\":\"hourlyForecast_cards__list-item__1MaOy\",\"icon\":\"hourlyForecast_icon__3m1qM\",\"cards__list\":\"hourlyForecast_cards__list__1D1GK\",\"cards__list-header\":\"hourlyForecast_cards__list-header__R5S9U\",\"cards\":\"hourlyForecast_cards__EBtMS\",\"content-cards-list\":\"hourlyForecast_content-cards-list__WemyM\",\"content-cards-header\":\"hourlyForecast_content-cards-header__3o8CY\",\"content-cards\":\"hourlyForecast_content-cards__25P2i\"};","import { useState, useEffect } from \"react\";\r\nimport { ICoords } from \"../models/coords.model\";\r\nimport { IOptions } from \"../models/options.model\";\r\n\r\nconst useCurrentLocation = (options: IOptions) => {\r\n\r\n  const [location, setLocation] = useState<ICoords>();\r\n  const [error, setError] = useState<string>();\r\n\r\n  const handleSuccess = (pos : GeolocationPosition): void => {\r\n    const { latitude:lat, longitude:lon } = pos.coords;\r\n\r\n    setLocation({\r\n      lat,\r\n      lon,\r\n    });\r\n  };\r\n\r\n  const handleError = (error: GeolocationPositionError): void => {\r\n    setError(error.message);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { geolocation } = navigator;\r\n\r\n    if (!geolocation) {\r\n      setError(\"Geolocation is not supported.\");\r\n      return;\r\n    }\r\n\r\n    geolocation.getCurrentPosition(handleSuccess, handleError, options);\r\n  }, [options]);\r\n\r\n  return { location, error };\r\n};\r\n\r\nexport default useCurrentLocation;","import { ICoords } from \"../models/coords.model\";\r\nimport IData  from \"../models/dataPosition.model\";\r\n\r\nconst API_key: string = '44b788430b6eae4f49d10064566fc911';\r\nconst URL: string =  'http://api.openweathermap.org/data/2.5/weather?';\r\n\r\nexport default async function getWeather(coords : ICoords) :Promise<IData>{   \r\n  let result;\r\n    try {\r\n        const response = await fetch(`${URL}lat=${coords.lat}&lon=${coords.lon}&units=metric&APPID=${API_key}`);\r\n        const data = await response.json();\r\n        result = data;\r\n      } catch (e) {\r\n        console.error(e);\r\n      } finally {\r\n        return result\r\n      }\r\n}\r\n\r\n\r\n\r\n","const API_key: string = '44b788430b6eae4f49d10064566fc911';\r\nconst URL: string =  'http://api.openweathermap.org/data/2.5/forecast?';\r\n\r\nconst delay = (ms: number) => {\r\n  return new Promise((resolve: any) => setTimeout(() => resolve(), ms));\r\n};\r\n\r\nexport default async function getWet(city : any) :Promise<any>{   \r\n    let result;\r\n      try {\r\n        await delay(3000);\r\n        const response = await fetch(`${URL}q=${city}&units=metric&appid=${API_key}`);\r\n        const data = await response.json();\r\n        result = data;\r\n        } catch (e) {\r\n          console.error(e);\r\n        } finally {\r\n          return result\r\n        }\r\n}\r\n\r\n","import React from 'react';\r\nimport ChangeContext from '../models/context.model'\r\n\r\nexport const Context = React.createContext<ChangeContext>({dataCity : 'Cherkassy', dataPosition : undefined, updateData: value => console.warn('default'), loading : false});","export default __webpack_public_path__ + \"static/media/sprite.5c2fe8ce.svg\";","import './descriptionListItem.module.scss';\r\nimport sprite from \"../../../../../../assets/sprite.svg\";\r\n\r\ntype ValueProps = {\r\n    value : [string, number]\r\n}\r\n\r\nexport const DescriptionListItem = ({value}: ValueProps) => {\r\n    let firstFieldName: string;\r\n    let secondFieldName! : string;\r\n    let rotate!: string;\r\n    \r\n    switch (value[0]) {\r\n        case 'feels_like':\r\n            firstFieldName = 'Feels like';\r\n            secondFieldName = `${value[1].toFixed(1)} ` + String.fromCharCode(8451);\r\n        break;\r\n        case 'temp_min':\r\n            firstFieldName = 'Minimum';\r\n            secondFieldName = `${value[1].toFixed(1)} ` + String.fromCharCode(8451);\r\n        break;\r\n        case 'temp_max':\r\n            firstFieldName = 'Maximum'\r\n            secondFieldName = `${value[1].toFixed(1)} ` + String.fromCharCode(8451);\r\n        break;\r\n        case 'pressure':\r\n            firstFieldName = 'Pressure';\r\n            secondFieldName = `${value[1]} ` + String.fromCharCode(13169);\r\n        break;\r\n        case 'humidity': \r\n            firstFieldName = 'Humidity';\r\n            secondFieldName = `${value[1]} ` + String.fromCharCode(37);\r\n        break;\r\n        case 'speed': \r\n            firstFieldName = 'Speed';\r\n            secondFieldName = `${value[1]} (m/s)`;\r\n        break;\r\n        case 'sunrise': \r\n            firstFieldName = 'Sunrise';\r\n            secondFieldName = new Date(value[1] * 1000).toLocaleTimeString();\r\n        break;\r\n        case 'sunset': \r\n            firstFieldName = 'Sunset';\r\n            secondFieldName = new Date(value[1] * 1000).toLocaleTimeString();\r\n        break;\r\n        case 'deg': \r\n            firstFieldName = 'Direction';\r\n            rotate = `rotateZ(${value[1]}deg)`;\r\n        break;\r\n        case 'all': \r\n            firstFieldName = 'Clouds';\r\n            secondFieldName = `${value[1]} ` + String.fromCharCode(37);\r\n        break;\r\n        case 'visibility': \r\n            firstFieldName = 'Visibility';\r\n            secondFieldName = `${value[1]} (m)`;\r\n        break;\r\n        default: firstFieldName = 'Unknown status'\r\n        break;\r\n    }\r\n\r\n    return (\r\n    <li className=\"list__description-item\">\r\n        <span>{firstFieldName}</span>\r\n        <span>{firstFieldName === 'Direction' ? <svg className=\"icon\" style={{transform: rotate}}><use href={sprite + \"#arrow\"}></use></svg> : secondFieldName}</span>\r\n    </li>\r\n    )\r\n}","import {useContext} from 'react';\r\nimport { Context } from \"../../../../../context/context\";\r\nimport { DescriptionListItem } from './descriptionListItem/descriptionListItem';\r\nimport \"./descriptionList.module.scss\";\r\nimport ChangeContext from '../../../../../models/context.model';\r\n\r\ntype TitleProps = {\r\n    title : string\r\n}\r\n\r\ntype ArrayKey = [string, number]\r\n\r\nexport const DescriptionList = ({title}: TitleProps) => {\r\n    const {dataPosition} = useContext<ChangeContext>(Context);\r\n\r\n    let temperatureArray: Array<ArrayKey> = [];\r\n    let sunArray: Array<ArrayKey> = [];\r\n    let windArray : Array<ArrayKey> = [];\r\n    let visibilityArray: Array<ArrayKey> = [];\r\n    let cloudArray : Array<ArrayKey> = [];\r\n\r\n    if (dataPosition){\r\n    switch (title) {\r\n        case 'Temperature parameters':\r\n            temperatureArray = Object.entries(dataPosition.main).filter((item)=> item[0] !== 'temp' && item[0] !== 'sea_level' && item[0] !== 'grnd_level' && item[0] !== 'pressure');\r\n            break;\r\n        case 'Sunrise & Sunset data':\r\n            sunArray = Object.entries(dataPosition.sys).filter((item)=> item[0] !== 'country' && item[0] !== 'id' && item[0] !== 'type');\r\n        break;\r\n        case 'Visibility':\r\n            visibilityArray = Object.entries(dataPosition).filter((item)=> item[0] === 'visibility');\r\n        break;\r\n        case 'Wind':\r\n            windArray = Object.entries(dataPosition.wind)\r\n        break;\r\n        case 'Cloudiness':\r\n            cloudArray = Object.entries(dataPosition.clouds)\r\n        break;\r\n    }\r\n    }\r\n    \r\n    return (\r\n        <ul className=\"list__description\">\r\n            <li className=\"list__description-title\">{title}</li>\r\n            {temperatureArray?.map(( item: ArrayKey, index:number) => <DescriptionListItem key={index} value={item}/>)}\r\n            {sunArray?.map(( item: ArrayKey, index:number) => <DescriptionListItem key={index} value={item}/>)}\r\n            {visibilityArray?.map(( item: ArrayKey, index:number) => <DescriptionListItem key={index} value={item}/>)}\r\n            {windArray?.map(( item: ArrayKey, index:number) => <DescriptionListItem key={index} value={item}/>)}\r\n            {cloudArray?.map(( item: ArrayKey, index:number) => <DescriptionListItem key={index} value={item} />)}\r\n        </ul>\r\n    )\r\n}","import {useContext} from 'react';\r\nimport { Context } from \"../../../../../context/context\";\r\nimport ChangeContext from '../../../../../models/context.model';\r\nimport './ImageField.module.scss'\r\n\r\nexport const ImageField: React.FC = () => {\r\n    const {dataPosition} = useContext<ChangeContext>(Context);\r\n    const icon: string | undefined = dataPosition?.weather[0].icon;\r\n    const text: string | undefined = dataPosition?.weather[0].main;\r\n    \r\n    return (\r\n        <div className='image-field'>\r\n            <p>{text}</p>\r\n            <img src={icon ? `http://openweathermap.org/img/wn/${icon}@2x.png` : ''} alt=\"icon\"/>\r\n        </div>\r\n    )\r\n}","import {useContext} from 'react';\r\nimport { Context } from \"../../../../../context/context\";\r\nimport ChangeContext from '../../../../../models/context.model';\r\n\r\n\r\nexport const TemperatuteField: React.FC = () => {\r\n    const {dataPosition} = useContext<ChangeContext>(Context);\r\n    const temp: number | undefined = dataPosition?.main.temp;\r\n    \r\n    return (\r\n        <p className='temperature'>{temp?.toFixed(1)}&#8451;</p>\r\n    )\r\n}","import { DescriptionList } from './descriptionList/descriptionList';\r\nimport { ImageField } from './ImageField/ImageField';\r\nimport { TemperatuteField } from './TemperatuteField/temperatuteField';\r\n\r\nexport const DescriptionCard: React.FC = () => {\r\n    const titleList: Array<string> = ['Temperature parameters','Sunrise & Sunset data','Visibility','Wind','Cloudiness'];\r\n\r\n    return (\r\n        <div className=\"content__description-card\">\r\n            <ImageField/>\r\n            <TemperatuteField/>\r\n            {titleList.map((item: string, index: number) => <DescriptionList key={index} title={item}/>)}\r\n        </div>\r\n    )\r\n}","import {useContext} from 'react';\r\nimport { Context } from \"../../../../context/context\";\r\nimport ChangeContext from '../../../../models/context.model';\r\nimport './description__header.module.scss'\r\n\r\nexport const DescriptionHeader = () => {\r\n    const {dataPosition} = useContext<ChangeContext>(Context);\r\n    let date : number | undefined = dataPosition?.dt;\r\n    \r\n    return (\r\n    <div className=\"content__description-header\">\r\n        <p>{dataPosition?.name}</p>\r\n        <p>{date ? new Date(date * 1000).toLocaleDateString() : Date.now()}</p>\r\n    </div>\r\n    )\r\n}","import { DescriptionCard } from './description__card/description__card';\r\nimport { DescriptionHeader } from './description__header/description__header';\r\n\r\nexport const Description: React.FC = () => {\r\n    return (\r\n        <div className=\"content__description\">\r\n            <DescriptionHeader/>\r\n            <DescriptionCard/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './header.module.scss'\r\n\r\nexport const Header: React.FC = () => {\r\n    return (\r\n        <h1 className=\"content__header\" data-text=\"Current Weather\">Current Weather</h1>\r\n    )\r\n}","import {ChangeEvent,FormEvent,FormEventHandler, useContext, useState} from 'react';\r\nimport { Context } from \"../../../context/context\";\r\nimport sprite from \"../../../assets/sprite.svg\";\r\nimport \"./search.module.scss\";\r\nimport ChangeContext from '../../../models/context.model';\r\n\r\nexport const SearchForm: React.FC = () => {\r\n    const {updateData} = useContext<ChangeContext>(Context);\r\n    const [value, setValue] = useState<string>(\"\");\r\n    \r\n    const submitHandler: FormEventHandler<HTMLFormElement> = (event: FormEvent) => {\r\n       event.preventDefault();\r\n        if (value.trim()) {\r\n            updateData(value);\r\n            setValue(\" \");\r\n    }\r\n    };\r\n\r\n    return (\r\n    <form className=\"content__search\" onSubmit={submitHandler}>\r\n        <p className=\"search__box\">\r\n            <input type=\"text\" className=\"search__box-input\" placeholder=\"Enter the city name...\" onChange={(event: ChangeEvent) => setValue((event.target as HTMLInputElement).value)} value={value}/>\r\n            <button className=\"search__box-button\" type=\"submit\">\r\n            <svg className=\"search__box-icon\">\r\n                <use href={sprite + \"#search\"}></use>\r\n            </svg>\r\n            </button>\r\n        </p>\r\n    </form>\r\n    )\r\n}","import React from 'react';\r\nimport { Description } from './description/description';\r\nimport { Header } from './header/header';\r\nimport { SearchForm } from './search/search';\r\nimport './currentWeather.module.scss'\r\n\r\nexport const CurrentWeather = () => {\r\n    return (\r\n        <div className=\"content\">\r\n            <Header/>\r\n            <SearchForm/>\r\n            <Description/>\r\n        </div>\r\n    )\r\n}","export const Dots = () => {\r\n    return (\r\n        <span></span>\r\n    )\r\n}","import sprite from \"../../../assets/sprite.svg\";\r\n\r\n\r\nexport const ForecastHeader = () => {\r\n    return (\r\n        <header className=\"content-cards-header\">\r\n            <h2>Hourly forecast</h2>\r\n            <div>\r\n                <svg className=\"icon\">\r\n                    <use href={sprite + \"#lady\"}></use>\r\n                </svg>\r\n            </div>\r\n        </header>\r\n    )\r\n}","import { IWeather } from '../../../../../models/dataCity.model';\r\nimport './ImageField.module.scss';\r\n\r\ntype DataProps = {\r\n    data: IWeather\r\n}\r\n\r\nexport const ImageField = ({data} : DataProps) => {\r\n    const icon: string = data.icon;\r\n    \r\n    return (\r\n        <figure className=\"cards__image\">\r\n            <img src={icon ? `http://openweathermap.org/img/wn/${icon}@2x.png` : ''} alt=\"icon\"/>\r\n            <figcaption>{data.description}</figcaption>\r\n        </figure>\r\n    )\r\n}","import './dateField.module.scss';\r\n\r\ntype DateProps = {\r\n    data : [string, number]\r\n}\r\n\r\nexport const DateField = ({data} : DateProps) => {\r\n    const innerData = new Date(data[1] * 1000).toLocaleString();\r\n    \r\n    return (\r\n        <h3 className=\"cards__header\">\r\n            <time dateTime={innerData}>{innerData}</time>\r\n        </h3>\r\n    )\r\n}","import './dataListFieldItem.module.scss';\r\nimport sprite from \"../../../../../../assets/sprite.svg\";\r\n\r\ntype DataProps = {\r\n    data : [string, number];\r\n}\r\n\r\nexport const DataListFieldItem = ({data}: DataProps) => {\r\n    let nameOfFields: string = '';\r\n    let valueOfField : string = '';\r\n    let rotate: string = '';\r\n\r\n    switch (data[0]) {\r\n        case 'temp':\r\n            nameOfFields = 'Temperature';\r\n            valueOfField = data[1].toFixed(1) + String.fromCharCode(8451)\r\n        break;\r\n        case 'feels_like':\r\n            nameOfFields = 'Feels like';\r\n            valueOfField = data[1].toFixed(1) + String.fromCharCode(8451)\r\n        break;\r\n        case 'speed':\r\n            nameOfFields = 'Speed';\r\n            valueOfField = data[1].toFixed(1) + '(m/s)'\r\n        break;\r\n        case 'deg':\r\n            nameOfFields = 'Direction';\r\n            valueOfField = data[1].toFixed(1) + String.fromCharCode(37);\r\n            rotate = `rotateZ(${data[1]}deg)`;\r\n        break;\r\n    }\r\n    \r\n    return (\r\n            <li className=\"cards__list-item\">\r\n                <span>{nameOfFields}</span>\r\n                <span>{nameOfFields === 'Direction' ? <svg className=\"icon\" style={{transform: rotate}}><use href={sprite + \"#arrow\"}></use></svg> : valueOfField}</span>\r\n            </li>\r\n    )\r\n}","import React from 'react';\r\nimport './dataListField.module.scss'\r\nimport { DataListFieldItem } from './dataListFieldItem/dataListFieldItem';\r\n\r\ntype DataProps = {\r\n    data : [string, number];\r\n}\r\n\r\ntype ArrayKey = [string, number]\r\n\r\nexport const DataListField = ({data}: DataProps) => {\r\n    let innerHeaderField: string;\r\n    let innerItemFieldArray: Array<ArrayKey> = [];\r\n\r\n    switch (data[0]) {\r\n        case 'main':\r\n            innerHeaderField = 'Temperature';\r\n            innerItemFieldArray = Object.entries(data[1]).filter((item) => item[0] === 'temp' || item[0] === 'feels_like');\r\n        break;\r\n        case 'wind':\r\n            innerHeaderField = 'Wind';\r\n            innerItemFieldArray = Object.entries(data[1]);\r\n        break;\r\n        default:\r\n            innerHeaderField = 'unknown';\r\n        break;\r\n    }\r\n    \r\n    return (\r\n        <ul className=\"cards__list\">\r\n            <li className=\"cards__list-header\"><h3>{innerHeaderField}</h3></li>\r\n            {innerItemFieldArray.map((item: ArrayKey, index: number)=> <DataListFieldItem key={index} data={item}/>)}\r\n        </ul>\r\n    )\r\n}","import React from \"react\";\r\nimport { ImageField } from \"./imageField/ImageField\";\r\nimport { DateField } from \"./dateField/dateField\";\r\nimport { DataListField } from \"./dataListField/dataListField\";\r\nimport './forecastListItem.module.scss';\r\nimport { IMainInfo, IWeather } from \"../../../../models/dataCity.model\";\r\n\r\ntype CityProps = {\r\n    data : IMainInfo;\r\n}\r\n\r\ntype ArrayKey = [string, number];\r\n\r\nexport const ForecastListItem = ({data}: CityProps) => {\r\n    let dateData: Array<ArrayKey> = [];\r\n    let imageData: Array<IWeather> = [];\r\n    let temperatureArray: Array<ArrayKey> = [];\r\n    let windArray: Array<ArrayKey> = [];\r\n\r\n    if (data) {\r\n        dateData = Object.entries(data).filter((item: any) => item[0] === 'dt');\r\n        imageData =  Object.values(data.weather)\r\n        temperatureArray = Object.entries(data).filter((item: any) => item[0] === 'main');\r\n        windArray = Object.entries(data).filter((item: any) => item[0] === 'wind');\r\n    }\r\n\r\n    return (\r\n        <div className=\"cards\">\r\n            {dateData.map((item: ArrayKey, index: number) =>  <DateField key={index} data={item}/>)}\r\n            {imageData.map((item: IWeather, index: number) => <ImageField key={index} data ={item}/>)}\r\n            {temperatureArray.map((item: ArrayKey, index: number) => <DataListField key={index} data={item}/>)}\r\n            {windArray.map((item: ArrayKey, index: number) => <DataListField key={index} data={item}/>)}\r\n        </div>\r\n    )\r\n}","import './loader.module.scss'\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className=\"cssload-wrap\">\r\n            <div className=\"cssload-circle\"></div>\r\n            <div className=\"cssload-circle\"></div>\r\n            <div className=\"cssload-circle\"></div>\r\n            <div className=\"cssload-circle\"></div>\r\n            <div className=\"cssload-circle\"></div>\r\n        </div>\r\n    )\r\n}","import React, {useContext} from 'react';\r\nimport { Context } from \"../../../context/context\";\r\nimport { ForecastListItem } from './forecastListItem/forecastListItem';\r\nimport './forecastList.module.scss'\r\nimport ChangeContext from '../../../models/context.model';\r\nimport { IMainInfo } from '../../../models/dataCity.model';\r\nimport { Loader } from '../../loader/loader';\r\n\r\nexport const ForecastList = () => {\r\n    const {dataCity, loading} = useContext<ChangeContext>(Context);\r\n    let quantityOfCards: Array<IMainInfo> = [];\r\n\r\n    if (dataCity) quantityOfCards =  dataCity.list.slice(0,9);\r\n    \r\n    return (\r\n        <div className=\"content-cards-list\">\r\n            {loading ? <Loader/> : quantityOfCards.map((item: IMainInfo ,index: number)=> <ForecastListItem key={index} data={item}/>)}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { ForecastHeader } from './forecastHeader/ForecastHeader';\r\nimport { ForecastList } from './forecastList/forecastList';\r\nimport './hourlyForecast.module.scss'\r\n\r\n\r\nexport const HourlyForecast: React.FC = () => {\r\n    return (\r\n        <div className=\"content-cards\">\r\n            <ForecastHeader/>\r\n            <ForecastList/>\r\n        </div>\r\n    )\r\n}","import { IOptions } from \"../models/options.model\";\r\n\r\nexport const geolocationOptions: IOptions = {\r\n    enableHighAccuracy: true,\r\n    timeout: 1000 * 60 * 1, // 1 min (1000 ms * 60 sec * 1 minute = 60 000ms)\r\n    maximumAge: 1000 * 3600 * 24, // 24 hour\r\n  };","import { ICoords } from \"../models/coords.model\";\r\n\r\nexport const defaultCoords: ICoords = {\r\n    lat:  50.4546600,\r\n    lon:  30.5238000,\r\n};","export const dots = ():number[] => {\r\n    const array : number[] = [];\r\n    for (let index = 0; index <= 19; index++) {\r\n        array.push(index);\r\n    }\r\n    return array\r\n};","import React, { useState ,useEffect } from 'react';\nimport useCurrentLocation from './hooks/useCurrentLocation';\nimport getWeather from \"./services/requestCurrentWeather\";\nimport getWet from './services/requestWeatherByCity';\n\nimport { CurrentWeather } from './components/currentWeather/currentWeather';\nimport { Dots } from './components/dots/dots';\nimport {HourlyForecast} from './components/hourlyForecast/hourlyForecast';\n\n\nimport { geolocationOptions } from \"./constant/option\";\nimport { defaultCoords } from \"./constant/defaultCoords\";\nimport { dots } from './constant/quantityOfDots'\n\nimport { Context } from \"./context/context\";\n\nimport { ICoords } from './models/coords.model';\nimport { IDataCity } from './models/dataCity.model';\nimport IDataPosition from './models/dataPosition.model';\n\nimport './App.scss';\n\nexport const App:React.FC = () => {\n  const { location: currentLocation, error: currentError } = useCurrentLocation(geolocationOptions);\n  const [dataPosition, setDataPosition] = React.useState<IDataPosition>();\n  const [dataCity, setDataCity] = React.useState<IDataCity>();\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    if (currentLocation) { getWeather(currentLocation).then((result: IDataPosition) => {\n      if (result.cod === 200) {\n        setDataPosition(result);\n        getWet(result.name).then((response: IDataCity) => {\n          setDataCity(response)\n          setLoading(false);\n        });\n      } else {\n        console.log(currentError);\n      }\n      })\n      .catch(e => console.log(e))\n    } else {\n      getWeather(defaultCoords).then((result: IDataPosition) => {\n        if (result.cod === 200) {\n          setDataPosition(result)\n          getWet(result.name).then((response: IDataCity) => {\n            setDataCity(response)\n            setLoading(false);\n          });\n        } else {\n          console.log('Error');\n        }\n      })\n    }\n  }, [currentLocation]);\n\n\n  const updateData = (x: string): void => {\n    setLoading(true);\n    getWet(x).then((response: IDataCity)=> {\n      if (response.cod === '200') {\n        const updatedCoords: ICoords = response.city.coord;\n        getWeather(updatedCoords).then((res : IDataPosition)=>{\n          setDataPosition(res);\n          setLoading(false);\n        });\n        setDataCity(response);\n      } else {\n        console.log('Error');\n      }\n    });\n  };\n\n  return (\n        <Context.Provider value={{ dataPosition: dataPosition, updateData: updateData , dataCity: dataCity, loading: loading }}>\n          <section className=\"wrapper\">\n            <div className=\"background\">\n              {dots().map((item: number)=><Dots key={item}/>)}\n            </div>\n            <div className=\"container\">\n              <HourlyForecast/>\n              <CurrentWeather/>\n            </div>\n          </section>\n        </Context.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport WebFont from \"webfontloader\";\n\nWebFont.load({\n  google: {\n    families: [\"Inter:wght@100;200;300;400;500;600;700;800;900&display=swap\"],\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}