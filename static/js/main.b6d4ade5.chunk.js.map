{"version":3,"sources":["components/loader/loader.module.scss","App.module.scss","components/currentWeather/search/searchBox/searchBox.module.scss","components/hourlyForecast/forecastHeader/ForecastHeader.module.scss","components/404/pageNotFound.module.scss","components/currentWeather/description/description__card/ImageField/ImageField.module.scss","components/currentWeather/search/radioBox/radioItems/radioItems.module.scss","components/hourlyForecast/forecastList/forecastListItem/imageField/ImageField.module.scss","components/currentWeather/description/description__card/descriptionList/descriptionListItem/descriptionListItem.module.scss","components/currentWeather/description/description__card/descriptionList/descriptionList.module.scss","components/hourlyForecast/forecastList/forecastListItem/dataListField/dataListFieldItem/dataListFieldItem.module.scss","components/hourlyForecast/forecastList/forecastListItem/dataListField/dataListField.module.scss","components/currentWeather/description/description__card/TemperatuteField/temperatuteField.module.scss","components/currentWeather/description/description__card/description__card.module.scss","components/currentWeather/description/description__header/description__header.module.scss","components/currentWeather/description/description.module.scss","components/currentWeather/header/header.module.scss","components/currentWeather/search/radioBox/radioBox.module.scss","components/currentWeather/search/search.module.scss","components/spinner/spinner.module.scss","components/currentWeather/currentWeather.module.scss","components/hourlyForecast/forecastList/forecastListItem/dateField/dateField.module.scss","components/hourlyForecast/forecastList/forecastListItem/forecastListItem.module.scss","components/hourlyForecast/forecastList/forecastList.module.scss","components/hourlyForecast/hourlyForecast.module.scss","hooks/useCurrentLocation.tsx","services/requestCurrentWeather.tsx","services/requestWeatherByCity.tsx","services/requestNearbyCities.tsx","context/context.tsx","assets/sprite.svg","components/currentWeather/description/description__card/descriptionList/descriptionListItem/descriptionListItem.tsx","components/currentWeather/description/description__card/descriptionList/descriptionList.tsx","components/currentWeather/description/description__card/ImageField/ImageField.tsx","components/currentWeather/description/description__card/TemperatuteField/temperatuteField.tsx","components/currentWeather/description/description__card/description__card.tsx","components/currentWeather/description/description__header/description__header.tsx","components/currentWeather/description/description.tsx","components/currentWeather/header/header.tsx","components/currentWeather/search/searchBox/searchBox.tsx","components/currentWeather/search/radioBox/radioItems/radioItems.tsx","components/currentWeather/search/radioBox/radioBox.tsx","components/currentWeather/search/search.tsx","components/spinner/spinner.tsx","components/currentWeather/currentWeather.tsx","components/dots/dots.tsx","components/hourlyForecast/forecastHeader/ForecastHeader.tsx","components/hourlyForecast/forecastList/forecastListItem/cityField/cityField.tsx","components/hourlyForecast/forecastList/forecastListItem/imageField/ImageField.tsx","components/hourlyForecast/forecastList/forecastListItem/dateField/dateField.tsx","components/hourlyForecast/forecastList/forecastListItem/dataListField/dataListFieldItem/dataListFieldItem.tsx","components/hourlyForecast/forecastList/forecastListItem/dataListField/dataListField.tsx","components/hourlyForecast/forecastList/forecastListItem/forecastListItem.tsx","components/loader/loader.tsx","components/404/404.tsx","components/hourlyForecast/forecastList/forecastList.tsx","components/hourlyForecast/hourlyForecast.tsx","constant/option.tsx","constant/defaultCoords.tsx","constant/quantityOfDots.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","useCurrentLocation","options","useState","location","setLocation","error","setError","handleSuccess","pos","coords","lat","latitude","lon","longitude","handleError","message","useEffect","geolocation","navigator","getCurrentPosition","API_key","URL","delay","ms","Promise","resolve","setTimeout","getWeather","a","fetch","response","json","data","result","console","getWet","city","Context","React","createContext","dataCity","undefined","dataPosition","updateData","value","warn","loadingCards","updateWeatherCards","loadingMain","typeRequset","trueInfo","DescriptionListItem","firstFieldName","secondFieldName","rotate","toFixed","String","fromCharCode","Date","toLocaleTimeString","className","styles","item","icon","style","transform","href","sprite","DescriptionList","title","useContext","temperatureArray","sunArray","windArray","visibilityArray","cloudArray","Object","entries","main","filter","sys","wind","clouds","descriptionList","map","index","ImageField","weather","text","wrapper","image","src","alt","TemperatuteField","temp","temperature","DescriptionCard","card","DescriptionHeader","date","dt","header","name","toLocaleDateString","now","Description","description","Header","data-text","SearchBox","valueOfField","changeValue","type","input","placeholder","onChange","event","target","button","RadioItem","forLabel","forId","id","check","htmlFor","checked","bind","disabled","RadioBox","info","change","choise","SearchForm","setValue","radioValue","setRadioValue","search","onSubmit","preventDefault","trim","radio","Spinner","spinner","CurrentWeather","content","Dots","span","ForecastHeader","box","CityField","innerData","textAlign","fontWeight","DateField","toLocaleString","dateTime","DataListFieldItem","nameOfFields","DataListField","innerHeaderField","innerItemFieldArray","cardsList","ForecastListItem","cityData","dateData","imageData","values","cards","length","Loader","circle","FourHundredFour","container404","messageMain","messageAdditional","ForecastList","quantityOfCards","list","slice","listMain","HourlyForecast","geolocationOptions","enableHighAccuracy","timeout","maximumAge","defaultCoords","dots","array","push","App","currentLocation","currentError","setDataPosition","setDataCity","setLoadingCard","setLoadingMain","setTrueInfo","setTypeRequset","lastCoords","useRef","lastCity","then","cod","current","log","catch","e","flag","getNearbyCities","Provider","updatedCoords","coord","background","container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6d4ade5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"loader_wrapper__1KSNe\",\"circle\":\"loader_circle__16Zdn\",\"cssload-spin\":\"loader_cssload-spin__2dui9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2IvJ5\",\"background\":\"App_background__SbsyO\",\"span\":\"App_span__1kN1O\",\"move\":\"App_move__WcLEX\",\"container\":\"App_container__ygRDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"searchBox_wrapper__2_7qJ\",\"input\":\"searchBox_input__1MGoy\",\"button\":\"searchBox_button__3otJJ\",\"icon\":\"searchBox_icon__9Bchx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ForecastHeader_wrapper__3HYvf\",\"header\":\"ForecastHeader_header__DAzO5\",\"box\":\"ForecastHeader_box__1UdFn\",\"icon\":\"ForecastHeader_icon__2JeWS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container404\":\"pageNotFound_container404__1y1LP\",\"messageMain\":\"pageNotFound_messageMain__3SH1-\",\"messageAdditional\":\"pageNotFound_messageAdditional__3QDHF\",\"icon\":\"pageNotFound_icon__3in6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ImageField_wrapper__JHc0B\",\"text\":\"ImageField_text__1sO2c\",\"image\":\"ImageField_image__ywI7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"radioItems_wrapper__3SuBP\",\"input\":\"radioItems_input__1V8_l\",\"text\":\"radioItems_text__ujkJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ImageField_wrapper__2T6qW\",\"image\":\"ImageField_image__20n7Y\",\"text\":\"ImageField_text__2qI-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"descriptionListItem_item__2PYt3\",\"icon\":\"descriptionListItem_icon__3ymP9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionList\":\"descriptionList_descriptionList__2QidY\",\"title\":\"descriptionList_title__3p_HH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"dataListFieldItem_item__2GKEe\",\"icon\":\"dataListFieldItem_icon__2EqQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsList\":\"dataListField_cardsList__1iwxk\",\"header\":\"dataListField_header__fWXdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"temperature\":\"temperatuteField_temperature__3dYSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"description__card_card__trJFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"description__header_header__2v-Kq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"description_description__rUteB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3fpuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"choise\":\"radioBox_choise__2rlgm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"search_search__1nMAT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner_spinner__3zcAD\",\"loader\":\"spinner_loader__gPkfN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"currentWeather_content__31XyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"dateField_header__Aeigg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"forecastListItem_cards__3U0aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listMain\":\"forecastList_listMain__2NG-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"hourlyForecast_cards__EBtMS\"};","import { useState, useEffect } from \"react\";\r\nimport { ICoords } from \"../models/coords.model\";\r\nimport { IOptions } from \"../models/options.model\";\r\n\r\nconst useCurrentLocation = (options: IOptions) => {\r\n\r\n  const [location, setLocation] = useState<ICoords>();\r\n  const [error, setError] = useState<string>();\r\n\r\n  const handleSuccess = (pos : GeolocationPosition): void => {\r\n    const { latitude:lat, longitude:lon } = pos.coords;\r\n\r\n    setLocation({\r\n      lat,\r\n      lon,\r\n    });\r\n  };\r\n\r\n  const handleError = (error: GeolocationPositionError): void => {\r\n    setError(error.message);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { geolocation } = navigator;\r\n\r\n    if (!geolocation) {\r\n      setError(\"Geolocation is not supported.\");\r\n      return;\r\n    }\r\n\r\n    geolocation.getCurrentPosition(handleSuccess, handleError, options);\r\n  }, [options]);\r\n  \r\n  return { location, error };\r\n};\r\n\r\nexport default useCurrentLocation;","import { ICoords } from \"../models/coords.model\";\r\nimport IData  from \"../models/dataPosition.model\";\r\n\r\nconst API_key: string = '44b788430b6eae4f49d10064566fc911';\r\nconst URL: string =  'http://api.openweathermap.org/data/2.5/weather?';\r\n\r\nconst delay = (ms: number) => {\r\n  return new Promise((resolve: any) => setTimeout(() => resolve(), ms));\r\n};\r\n\r\nexport default async function getWeather(coords : ICoords) :Promise<IData>{   \r\n  let result;\r\n    try {\r\n      await delay(3000);\r\n      const response = await fetch(`${URL}lat=${coords.lat}&lon=${coords.lon}&units=metric&APPID=${API_key}`);\r\n      const data = await response.json();\r\n      result = data;\r\n      } catch (e) {\r\n        console.error(e);\r\n      } finally {\r\n        return result;\r\n      }\r\n}\r\n\r\n\r\n\r\n","import { IDataCity } from \"../models/dataCity.model\";\r\n\r\nconst API_key: string = '44b788430b6eae4f49d10064566fc911';\r\nconst URL: string =  'http://api.openweathermap.org/data/2.5/forecast?';\r\n\r\nconst delay = (ms: number) => {\r\n  return new Promise((resolve: any) => setTimeout(() => resolve(), ms));\r\n};\r\n\r\nexport default async function getWet(city : string) :Promise<IDataCity>{   \r\n    let result;\r\n      try {\r\n        await delay(3000);\r\n        const response = await fetch(`${URL}q=${city}&units=metric&appid=${API_key}`);\r\n        const data = await response.json();\r\n        result = data;\r\n        } catch (e) {\r\n          console.error(e);\r\n        } finally {\r\n          return result\r\n        }\r\n}\r\n\r\n","import { ICoords } from \"../models/coords.model\";\r\n\r\nconst API_key: string = '44b788430b6eae4f49d10064566fc911';\r\nconst URL: string =  'http://api.openweathermap.org/data/2.5/find?';\r\n\r\nconst delay = (ms: number) => {\r\n  return new Promise((resolve: any) => setTimeout(() => resolve(), ms));\r\n};\r\n\r\nexport default async function getNearbyCities(coords : ICoords) :Promise<any>{   \r\n    let result;\r\n      try {\r\n        await delay(3000);\r\n        const response = await fetch(`${URL}lat=${coords.lat}&lon=${coords.lon}&cnt=${9}&units=metric&appid=${API_key}`);\r\n        const data = await response.json();\r\n        result = data;\r\n        } catch (e) {\r\n          console.error(e);\r\n        } finally {\r\n          return result\r\n        }\r\n}","import React from 'react';\r\nimport ChangeContext from '../models/context.model'\r\n\r\nexport const Context = React.createContext<ChangeContext>({\r\n    dataCity : undefined,\r\n    dataPosition : undefined,\r\n    updateData: value => console.warn('default'),\r\n    loadingCards : false,\r\n    updateWeatherCards : value => console.warn('default'),\r\n    loadingMain: false,\r\n    typeRequset : '',\r\n    trueInfo: true,\r\n    });","export default __webpack_public_path__ + \"static/media/sprite.bffd5d7d.svg\";","import styles from './descriptionListItem.module.scss';\r\nimport sprite from \"../../../../../../assets/sprite.svg\";\r\n\r\ntype ValueProps = {\r\n    value : [string, number]\r\n}\r\n\r\nexport const DescriptionListItem: React.FC<ValueProps> = ({value}) => {\r\n    let firstFieldName: string;\r\n    let secondFieldName! : string;\r\n    let rotate!: string;\r\n    \r\n    switch (value[0]) {\r\n        case 'feels_like':\r\n            firstFieldName = 'Feels like';\r\n            secondFieldName = `${value[1].toFixed(1)} ` + String.fromCharCode(8451);\r\n        break;\r\n        case 'temp_min':\r\n            firstFieldName = 'Minimum';\r\n            secondFieldName = `${value[1].toFixed(1)} ` + String.fromCharCode(8451);\r\n        break;\r\n        case 'temp_max':\r\n            firstFieldName = 'Maximum'\r\n            secondFieldName = `${value[1].toFixed(1)} ` + String.fromCharCode(8451);\r\n        break;\r\n        case 'pressure':\r\n            firstFieldName = 'Pressure';\r\n            secondFieldName = `${value[1]} ` + String.fromCharCode(13169);\r\n        break;\r\n        case 'humidity': \r\n            firstFieldName = 'Humidity';\r\n            secondFieldName = `${value[1]} ` + String.fromCharCode(37);\r\n        break;\r\n        case 'speed': \r\n            firstFieldName = 'Speed';\r\n            secondFieldName = `${value[1]} (m/s)`;\r\n        break;\r\n        case 'sunrise': \r\n            firstFieldName = 'Sunrise';\r\n            secondFieldName = new Date(value[1] * 1000).toLocaleTimeString();\r\n        break;\r\n        case 'sunset': \r\n            firstFieldName = 'Sunset';\r\n            secondFieldName = new Date(value[1] * 1000).toLocaleTimeString();\r\n        break;\r\n        case 'deg': \r\n            firstFieldName = 'Direction';\r\n            rotate = `rotateZ(${value[1]}deg)`;\r\n        break;\r\n        case 'all': \r\n            firstFieldName = 'Clouds';\r\n            secondFieldName = `${value[1]} ` + String.fromCharCode(37);\r\n        break;\r\n        case 'visibility': \r\n            firstFieldName = 'Visibility';\r\n            secondFieldName = `${value[1]} (m)`;\r\n        break;\r\n        default: firstFieldName = 'Unknown status'\r\n        break;\r\n    }\r\n\r\n    return (\r\n    <li className={styles.item}>\r\n        <span>{firstFieldName}</span>\r\n        <span>{firstFieldName === 'Direction' ? <svg className={styles.icon} style={{transform: rotate}}><use href={sprite + \"#arrow\"}></use></svg> : secondFieldName}</span>\r\n    </li>\r\n    )\r\n}","import React, {useContext} from 'react';\r\nimport { Context } from \"../../../../../context/context\";\r\nimport { DescriptionListItem } from './descriptionListItem/descriptionListItem';\r\nimport ChangeContext from '../../../../../models/context.model';\r\nimport styles from \"./descriptionList.module.scss\";\r\n\r\ntype TitleProps = {\r\n    title : string\r\n}\r\n\r\ntype ArrayKey = [string, number]\r\n\r\nexport const DescriptionList: React.FC<TitleProps> = ({title}) => {\r\n    const {dataPosition} = useContext<ChangeContext>(Context);\r\n    \r\n    let temperatureArray: Array<ArrayKey> = [];\r\n    let sunArray: Array<ArrayKey> = [];\r\n    let windArray : Array<ArrayKey> = [];\r\n    let visibilityArray: Array<ArrayKey> = [];\r\n    let cloudArray : Array<ArrayKey> = [];\r\n\r\n    if (dataPosition){\r\n    switch (title) {\r\n        case 'Temperature parameters':\r\n            temperatureArray = Object.entries(dataPosition.main).filter((item)=> item[0] !== 'temp' && item[0] !== 'sea_level' && item[0] !== 'grnd_level' && item[0] !== 'pressure');\r\n            break;\r\n        case 'Sunrise & Sunset data':\r\n            sunArray = Object.entries(dataPosition.sys).filter((item)=> item[0] !== 'country' && item[0] !== 'id' && item[0] !== 'type');\r\n        break;\r\n        case 'Visibility':\r\n            visibilityArray = Object.entries(dataPosition).filter((item)=> item[0] === 'visibility');\r\n        break;\r\n        case 'Wind':\r\n            windArray = Object.entries(dataPosition.wind).filter((item)=> item[0] !== 'gust');\r\n        break;\r\n        case 'Cloudiness':\r\n            cloudArray = Object.entries(dataPosition.clouds)\r\n        break;\r\n    }\r\n    }\r\n    \r\n    return (\r\n        <ul className={styles.descriptionList}>\r\n            <li className={styles.title}>{title}</li>\r\n            {temperatureArray?.map(( item: ArrayKey, index:number) => <DescriptionListItem key={index} value={item}/>)}\r\n            {sunArray?.map(( item: ArrayKey, index:number) => <DescriptionListItem key={index} value={item}/>)}\r\n            {visibilityArray?.map(( item: ArrayKey, index:number) => <DescriptionListItem key={index} value={item}/>)}\r\n            {windArray?.map(( item: ArrayKey, index:number) => <DescriptionListItem key={index} value={item}/>)}\r\n            {cloudArray?.map(( item: ArrayKey, index:number) => <DescriptionListItem key={index} value={item} />)}\r\n        </ul>\r\n    )\r\n}","import {useContext} from 'react';\r\nimport { Context } from \"../../../../../context/context\";\r\nimport ChangeContext from '../../../../../models/context.model';\r\nimport styles from './ImageField.module.scss'\r\n\r\nexport const ImageField: React.FC = () => {\r\n    const {dataPosition} = useContext<ChangeContext>(Context);\r\n    const icon: string | undefined = dataPosition?.weather[0].icon;\r\n    const text: string | undefined = dataPosition?.weather[0].main;\r\n    \r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <p className={styles.text} >{text}</p>\r\n            <img className={styles.image} src={icon ? `http://openweathermap.org/img/wn/${icon}@2x.png` : ''} alt=\"icon\"/>\r\n        </div>\r\n    )\r\n}","import {useContext} from 'react';\r\nimport { Context } from \"../../../../../context/context\";\r\nimport ChangeContext from '../../../../../models/context.model';\r\nimport styles from './temperatuteField.module.scss'\r\n\r\n\r\nexport const TemperatuteField: React.FC = () => {\r\n    const {dataPosition} = useContext<ChangeContext>(Context);\r\n    const temp: number | undefined = dataPosition?.main.temp;\r\n    \r\n    return (\r\n        <p className={styles.temperature}>{temp?.toFixed(1)}&#8451;</p>\r\n    )\r\n}","import { DescriptionList } from './descriptionList/descriptionList';\r\nimport { ImageField } from './ImageField/ImageField';\r\nimport { TemperatuteField } from './TemperatuteField/temperatuteField';\r\nimport styles from './description__card.module.scss'\r\n\r\nexport const DescriptionCard: React.FC = () => {\r\n    const titleList: Array<string> = ['Temperature parameters','Sunrise & Sunset data','Visibility','Wind','Cloudiness'];\r\n\r\n    return (\r\n        <div className={styles.card}>\r\n            <ImageField/>\r\n            <TemperatuteField/>\r\n            {titleList.map((item: string, index: number) => <DescriptionList key={index} title={item}/>)}\r\n        </div>\r\n    )\r\n}","import {useContext} from 'react';\r\nimport { Context } from \"../../../../context/context\";\r\nimport ChangeContext from '../../../../models/context.model';\r\nimport styles from './description__header.module.scss'\r\n\r\nexport const DescriptionHeader: React.FC = () => {\r\n    const {dataPosition} = useContext<ChangeContext>(Context);\r\n    let date : number | undefined = dataPosition?.dt;\r\n    \r\n    return (\r\n    <div className={styles.header}>\r\n        <p>{dataPosition?.name}</p>\r\n        <p>{date ? new Date(date * 1000).toLocaleDateString() : Date.now()}</p>\r\n    </div>\r\n    )\r\n}","import { DescriptionCard } from './description__card/description__card';\r\nimport { DescriptionHeader } from './description__header/description__header';\r\nimport styles from './description.module.scss'\r\n\r\nexport const Description: React.FC = () => {\r\n    return (\r\n        <div className={styles.description}>\r\n            <DescriptionHeader/>\r\n            <DescriptionCard/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './header.module.scss'\r\n\r\nexport const Header: React.FC = () => {\r\n    return (\r\n        <h1 className={styles.header} data-text=\"Current Weather\">Current Weather</h1>\r\n    )\r\n}","import sprite from \"../../../../assets/sprite.svg\";\r\nimport { ChangeEvent } from 'react';\r\nimport styles from './searchBox.module.scss';\r\n\r\ntype DataProps = {\r\n    valueOfField : string;\r\n    changeValue: (value: string) => void;\r\n}\r\n\r\nexport const SearchBox = ({valueOfField, changeValue}: DataProps) => {\r\n    return (\r\n        <p className={styles.wrapper}>\r\n        <input type=\"text\" className={styles.input} placeholder=\"Enter the city name...\" onChange={(event: ChangeEvent) => changeValue((event.target as HTMLInputElement).value)} value={valueOfField}/>\r\n        <button className={styles.button} type=\"submit\">\r\n        <svg className={styles.icon}>\r\n            <use href={sprite + \"#search\"}></use>\r\n        </svg>\r\n        </button>\r\n    </p>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { Context } from '../../../../../context/context';\r\nimport ChangeContext from '../../../../../models/context.model';\r\nimport styles from './radioItems.module.scss';\r\n\r\ntype DataProps = {\r\n    forLabel: string,\r\n    forId: string,\r\n    text: string,\r\n    id: number,\r\n    check : boolean,\r\n    onChange: (id: number, value: string) => void,\r\n}\r\n\r\nexport const RadioItem = ({forLabel, forId, text, id,check, onChange}: DataProps) => {\r\n    const {trueInfo} = useContext<ChangeContext>(Context);\r\n    return (\r\n        <label htmlFor={forLabel} className={styles.wrapper}>\r\n            <input type=\"radio\" className={styles.input} name=\"choiseCard\" id={forId} value={text} checked={check} onChange={onChange.bind(null, id, text)} disabled={!trueInfo}/>\r\n            <span className={styles.text}>{text}</span>\r\n        </label>\r\n    )\r\n}","import React from 'react';\r\nimport { IRadio } from '../../../../models/radio.model';\r\nimport { RadioItem } from './radioItems/radioItems';\r\nimport styles from './radioBox.module.scss'\r\n\r\ntype DataProps = {\r\n    info: IRadio[],\r\n    change: (id: number, value: string) => void\r\n}\r\n\r\nexport const RadioBox = ({info, change}: DataProps) => {\r\n    return (\r\n        <p className={styles.choise}>\r\n            {info.map((item:any)=> <RadioItem key={item.id} onChange={change} {...item}/>)}\r\n        </p>\r\n    )\r\n}","import React, { FormEvent,FormEventHandler, useContext, useState} from 'react';\r\nimport { SearchBox } from './searchBox/searchBox';\r\nimport { RadioBox } from './radioBox/radioBox';\r\n\r\nimport { Context } from \"../../../context/context\";\r\nimport ChangeContext from '../../../models/context.model';\r\n\r\nimport styles from \"./search.module.scss\";\r\n\r\n\r\nexport const SearchForm: React.FC = () => {\r\n    const {updateData, updateWeatherCards} = useContext<ChangeContext>(Context);\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const [ radioValue , setRadioValue ] = useState([\r\n        {id : 1, forLabel :'Hourly', forId : 'Hourly' , text: 'Hourly', check : true},\r\n        {id : 2, forLabel : 'Nearby', forId : 'Nearby', text: 'Nearby', check : false},\r\n    ]);\r\n\r\n    \r\n    const submitHandler: FormEventHandler<HTMLFormElement> = (event: FormEvent) => {\r\n        event.preventDefault();\r\n        if (value.trim()) {\r\n            updateData(value);\r\n            setValue(\" \");\r\n    }\r\n    };\r\n\r\n    const change = (id: number, value: string) => {\r\n        setRadioValue( radioValue.map(radio => {\r\n            if (radio.id === id) radio.check = !radio.check\r\n            else radio.check = !radio.check\r\n            return radio;\r\n        }));\r\n        updateWeatherCards(value)\r\n    }\r\n\r\n    return (\r\n    <form className={styles.search} onSubmit={submitHandler}>\r\n        <SearchBox valueOfField={value} changeValue={setValue}/>\r\n        <RadioBox info={radioValue} change={change}/>\r\n    </form>\r\n    )\r\n}","import styles from './spinner.module.scss'\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n        <div className={styles.spinner}></div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { Description } from './description/description';\r\nimport { Header } from './header/header';\r\nimport { SearchForm } from './search/search';\r\nimport { Context } from '../../context/context';\r\nimport ChangeContext from '../../models/context.model';\r\nimport { Spinner } from '../spinner/spinner';\r\n\r\nimport styles from './currentWeather.module.scss'\r\n\r\nexport const CurrentWeather = () => {\r\n    const {loadingMain, trueInfo} = useContext<ChangeContext>(Context);\r\n    return (\r\n        <div className={styles.content}>\r\n            <Header/>\r\n            <SearchForm/>\r\n            {loadingMain ? <Spinner/> : trueInfo ? <Description/> : ''}\r\n        </div>\r\n    )\r\n}","import styles from \"../../App.module.scss\"\r\n\r\nexport const Dots = () => {\r\n    return (\r\n        <span className={styles.span}></span>\r\n    )\r\n}","import { useContext } from \"react\";\r\nimport sprite from \"../../../assets/sprite.svg\";\r\nimport { Context } from \"../../../context/context\";\r\nimport ChangeContext from \"../../../models/context.model\";\r\nimport styles from './ForecastHeader.module.scss'\r\n\r\n\r\nexport const ForecastHeader = () => {\r\n    const {typeRequset} = useContext<ChangeContext>(Context);\r\n    return (\r\n        <header className={styles.wrapper}>\r\n            <h2 className={styles.header}>{typeRequset} forecast</h2>\r\n            <div className={styles.box}>\r\n                <svg className={styles.icon}>\r\n                    <use href={sprite + \"#lady\"}></use>\r\n                </svg>\r\n            </div>\r\n        </header>\r\n    )\r\n}","\r\ntype CityProps = {\r\n    data : [string, number]\r\n}\r\n\r\nexport const CityField: React.FC<CityProps> = ({data}) => {\r\n    const innerData = data[1];\r\n    \r\n    return (\r\n        <h3 style={{ textAlign : \"center\", fontWeight: 600}}>\r\n            {innerData}\r\n        </h3>\r\n    )\r\n}","import { IWeather } from '../../../../../models/dataCity.model';\r\nimport styles from './ImageField.module.scss';\r\n\r\ntype DataProps = {\r\n    data: IWeather\r\n}\r\n\r\nexport const ImageField: React.FC<DataProps> = ({data}) => {\r\n    const icon: string = data.icon;\r\n    \r\n    return (\r\n        <figure className={styles.wrapper}>\r\n            <img className={styles.image} src={icon ? `http://openweathermap.org/img/wn/${icon}@2x.png` : ''} alt=\"icon\"/>\r\n            <figcaption className={styles.text}>{data.description}</figcaption>\r\n        </figure>\r\n    )\r\n}","import styles from './dateField.module.scss';\r\n\r\ntype DateProps = {\r\n    data : [string, number]\r\n}\r\n\r\nexport const DateField: React.FC<DateProps>= ({data}) => {\r\n    const innerData = new Date(data[1] * 1000).toLocaleString();\r\n    \r\n    return (\r\n        <h3 className={styles.header}>\r\n            <time dateTime={innerData}>{innerData}</time>\r\n        </h3>\r\n    )\r\n}","import styles from './dataListFieldItem.module.scss';\r\nimport sprite from \"../../../../../../assets/sprite.svg\";\r\n\r\ntype DataProps = {\r\n    data : [string, number];\r\n}\r\n\r\nexport const DataListFieldItem: React.FC<DataProps> = ({data}) => {\r\n    let nameOfFields: string = '';\r\n    let valueOfField : string = '';\r\n    let rotate: string = '';\r\n\r\n    switch (data[0]) {\r\n        case 'temp':\r\n            nameOfFields = 'Temperature';\r\n            valueOfField = data[1].toFixed(1) + String.fromCharCode(8451)\r\n        break;\r\n        case 'feels_like':\r\n            nameOfFields = 'Feels like';\r\n            valueOfField = data[1].toFixed(1) + String.fromCharCode(8451)\r\n        break;\r\n        case 'speed':\r\n            nameOfFields = 'Speed';\r\n            valueOfField = data[1].toFixed(1) + '(m/s)'\r\n        break;\r\n        case 'deg':\r\n            nameOfFields = 'Direction';\r\n            valueOfField = data[1].toFixed(1) + String.fromCharCode(37);\r\n            rotate = `rotateZ(${data[1]}deg)`;\r\n        break;\r\n    }\r\n    \r\n    return (\r\n            <li className={styles.item}>\r\n                <span>{nameOfFields}</span>\r\n                <span>{nameOfFields === 'Direction' ? <svg className={styles.icon} style={{transform: rotate}}><use href={sprite + \"#arrow\"}></use></svg> : valueOfField}</span>\r\n            </li>\r\n    )\r\n}","import React from 'react';\r\nimport { DataListFieldItem } from './dataListFieldItem/dataListFieldItem';\r\nimport styles from './dataListField.module.scss';\r\n\r\ntype DataProps = {\r\n    data : [string, number];\r\n}\r\n\r\ntype ArrayKey = [string, number]\r\n\r\nexport const DataListField: React.FC<DataProps> = ({data}) => {\r\n    let innerHeaderField: string;\r\n    let innerItemFieldArray: Array<ArrayKey> = [];\r\n\r\n    switch (data[0]) {\r\n        case 'main':\r\n            innerHeaderField = 'Temperature';\r\n            innerItemFieldArray = Object.entries(data[1]).filter((item) => item[0] === 'temp' || item[0] === 'feels_like');\r\n        break;\r\n        case 'wind':\r\n            innerHeaderField = 'Wind';\r\n            innerItemFieldArray = Object.entries(data[1]);\r\n        break;\r\n        default:\r\n            innerHeaderField = 'unknown';\r\n        break;\r\n    }\r\n    \r\n    return (\r\n        <ul className={styles.cardsList}>\r\n            <li className={styles.header}><h3>{innerHeaderField}</h3></li>\r\n            {innerItemFieldArray.map((item: ArrayKey, index: number)=> <DataListFieldItem key={index} data={item}/>)}\r\n        </ul>\r\n    )\r\n}","import React from \"react\";\r\nimport { CityField } from \"./cityField/cityField\";\r\nimport { ImageField } from \"./imageField/ImageField\";\r\nimport { DateField } from \"./dateField/dateField\";\r\nimport { DataListField } from \"./dataListField/dataListField\";\r\nimport { IMainInfo, IWeather } from \"../../../../models/dataCity.model\";\r\n\r\nimport styles from './forecastListItem.module.scss';\r\n\r\n\r\ntype CityProps = {\r\n    data : IMainInfo;\r\n}\r\n\r\ntype ArrayKey = [string, number];\r\n\r\nexport const ForecastListItem: React.FC<CityProps>= ({data}) => {\r\n    let cityData: Array<ArrayKey> = [];\r\n    let dateData: Array<ArrayKey> = [];\r\n    let imageData: Array<IWeather> = [];\r\n    let temperatureArray: Array<ArrayKey> = [];\r\n    let windArray: Array<ArrayKey> = [];\r\n\r\n    if (data) {\r\n        cityData = Object.entries(data).filter((item: any) => item[0] === 'name');\r\n        dateData = Object.entries(data).filter((item: any) => item[0] === 'dt');\r\n        imageData =  Object.values(data.weather)\r\n        temperatureArray = Object.entries(data).filter((item: any) => item[0] === 'main');\r\n        windArray = Object.entries(data).filter((item: any) => item[0] === 'wind');\r\n    }\r\n\r\n    return (\r\n        <div className={styles.cards}>\r\n            {cityData.length > 0 ? cityData.map((item: ArrayKey, index: number) =>  <CityField key={index} data={item}/>) : dateData.map((item: ArrayKey, index: number) =>  <DateField key={index} data={item}/>)}\r\n            {imageData.map((item: IWeather, index: number) => <ImageField key={index} data ={item}/>)}\r\n            {temperatureArray.map((item: ArrayKey, index: number) => <DataListField key={index} data={item}/>)}\r\n            {windArray.map((item: ArrayKey, index: number) => <DataListField key={index} data={item}/>)}\r\n        </div>\r\n    )\r\n}","import styles from './loader.module.scss'\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.circle}></div>\r\n            <div className={styles.circle}></div>\r\n            <div className={styles.circle}></div>\r\n            <div className={styles.circle}></div>\r\n            <div className={styles.circle}></div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './pageNotFound.module.scss'\r\nimport sprite from \"../../assets/sprite.svg\";\r\n\r\nexport const FourHundredFour: React.FC = () => {\r\n    return (\r\n        <div className={styles.container404}>\r\n            <h4 className={styles.messageMain}>Page not found</h4>\r\n            <div>\r\n                <svg className={styles.icon}>\r\n                    <use href={sprite + \"#404\"}></use>\r\n                </svg>\r\n            </div>\r\n            <p className={styles.messageAdditional}>\r\n                This city does not exist, check the name of the city and make a second request\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React, {useContext} from 'react';\r\nimport { Context } from \"../../../context/context\";\r\n\r\nimport { ForecastListItem } from './forecastListItem/forecastListItem';\r\nimport { Loader } from '../../loader/loader';\r\nimport { FourHundredFour } from '../../404/404';\r\n\r\nimport ChangeContext from '../../../models/context.model';\r\nimport { IMainInfo } from '../../../models/dataCity.model';\r\n\r\n\r\nimport styles from './forecastList.module.scss'\r\n\r\nexport const ForecastList: React.FC = () => {\r\n    const {dataCity, loadingCards, trueInfo} = useContext<ChangeContext>(Context);\r\n    let quantityOfCards: Array<IMainInfo> = [];\r\n\r\n    if (dataCity) quantityOfCards =  dataCity.list.slice(0,9);\r\n    \r\n    return (\r\n        <div className={styles.listMain}>\r\n            {loadingCards ? <Loader/> : trueInfo ? quantityOfCards.map((item: IMainInfo, index: number)=> <ForecastListItem key={index} data={item}/>) : <FourHundredFour/>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { ForecastHeader } from './forecastHeader/ForecastHeader';\r\nimport { ForecastList } from './forecastList/forecastList';\r\nimport styles from './hourlyForecast.module.scss'\r\n\r\n\r\nexport const HourlyForecast: React.FC = () => {\r\n    return (\r\n        <div className={styles.cards}>\r\n            <ForecastHeader/>\r\n            <ForecastList/>\r\n        </div>\r\n    )\r\n}","import { IOptions } from \"../models/options.model\";\r\n\r\nexport const geolocationOptions: IOptions = {\r\n    enableHighAccuracy: true,\r\n    timeout: 1000 * 60 * 1, // 1 min (1000 ms * 60 sec * 1 minute = 60 000ms)\r\n    maximumAge: 1000 * 3600 * 24, // 24 hour\r\n  };","import { ICoords } from \"../models/coords.model\";\r\n\r\nexport const defaultCoords: ICoords = {\r\n    lat:  50.4546600,\r\n    lon:  30.5238000,\r\n};","export const dots = ():number[] => {\r\n    const array : number[] = [];\r\n    for (let index = 0; index <= 19; index++) {\r\n        array.push(index);\r\n    }\r\n    return array\r\n};","import React, { useState, useEffect, useRef } from 'react';\nimport useCurrentLocation from './hooks/useCurrentLocation';\nimport getWeather from \"./services/requestCurrentWeather\";\nimport getWet from './services/requestWeatherByCity';\nimport getNearbyCities from './services/requestNearbyCities';\n\nimport { CurrentWeather } from './components/currentWeather/currentWeather';\nimport { Dots } from './components/dots/dots';\nimport { HourlyForecast } from './components/hourlyForecast/hourlyForecast';\n\n\nimport { geolocationOptions } from \"./constant/option\";\nimport { defaultCoords } from \"./constant/defaultCoords\";\nimport { dots } from './constant/quantityOfDots'\n\nimport { Context } from \"./context/context\";\n\nimport { ICoords } from './models/coords.model';\nimport { IDataCity } from './models/dataCity.model';\nimport IDataPosition from './models/dataPosition.model';\n\nimport styles from './App.module.scss';\n\n\nexport const App: React.FC = () => {\n  const { location: currentLocation, error: currentError } = useCurrentLocation(geolocationOptions);\n  const [dataPosition, setDataPosition] = React.useState<IDataPosition>();\n  const [dataCity, setDataCity] = React.useState<IDataCity>();\n  const [loadingCards, setLoadingCard] = React.useState(true);\n  const [loadingMain, setLoadingMain] = React.useState(true);\n  const [trueInfo, setTrueInfo] = React.useState(true);\n  const [typeRequset, setTypeRequset] = React.useState('Hourly');\n\n  const lastCoords = useRef<ICoords>(defaultCoords);\n  const lastCity = useRef('');\n\n  useEffect(() => {\n    if (currentLocation) {\n      getWeather(currentLocation).then((result: IDataPosition) => {\n        if (result.cod === 200) {\n          setDataPosition(result);\n          setLoadingMain(false);\n          lastCity.current = result.name;\n          getWet(result.name).then((response: IDataCity) => {\n            setDataCity(response)\n            setLoadingCard(false);\n          });\n          \n        }\n        else {\n          console.log('Error' , currentError );\n        }\n      })\n        .catch(e => console.log('Error behind promise!', e));\n      lastCoords.current = currentLocation;\n    } else {\n      getWeather(defaultCoords).then((result: IDataPosition) => {\n        if (result.cod === 200) {\n          setDataPosition(result);\n          setLoadingMain(false);\n          lastCity.current = result.name;\n          getWet(result.name).then((response: IDataCity) => {\n            setDataCity(response)\n            setLoadingCard(false);\n          });\n        } else {\n          console.log('Error' , result.message);\n        }\n      })\n      lastCoords.current = defaultCoords;\n    }\n  }, [currentLocation]);\n\n\n  const updateData = (city: string): void => {\n    setLoadingCard(true);\n    setLoadingMain(true);\n    switch (typeRequset) {\n      case 'Hourly':\n        getWet(city).then((response: IDataCity) => {\n          if (response.cod === '200') { \n            const updatedCoords: ICoords = response.city.coord;\n            lastCoords.current = updatedCoords;\n            lastCity.current = response.city.name;\n            getWeather(updatedCoords).then((result: IDataPosition) => {\n              setTrueInfo(true);\n              setDataPosition(result);\n              setLoadingMain(false);\n              setLoadingCard(false);\n            });\n            setDataCity(response);\n          } else {\n            console.log('Error');\n            setLoadingMain(false);\n            setLoadingCard(false);\n            setTrueInfo(false);\n          }\n        });\n      break;\n      case 'Nearby':\n        getWet(city).then((response: IDataCity) => {\n          if (response.cod === '200') { \n            const updatedCoords: ICoords = response.city.coord;\n            lastCoords.current = updatedCoords;\n            lastCity.current = response.city.name;\n            getWeather(updatedCoords).then((result: IDataPosition) => {\n              setTrueInfo(true);\n              setDataPosition(result);\n              setLoadingMain(false);\n              updateWeatherCards('Nearby');\n            });\n          } else {\n            console.log('Error');\n            setLoadingCard(false);\n            setLoadingMain(false);\n            setTrueInfo(false);\n          }\n        });\n      break;\n    }\n  \n  };\n\n  const updateWeatherCards = (flag: string): void => {\n    setTrueInfo(true);\n    setLoadingCard(true);\n    switch (flag) {\n      case 'Hourly':\n        setTypeRequset('Hourly');\n        getWet(lastCity.current).then((response: IDataCity) => {\n          if (response.cod === '200') {\n            setDataCity(response);\n            setLoadingCard(false);\n          } else {\n            console.log('Error');\n            setLoadingMain(false);\n            setLoadingCard(false);\n            setTrueInfo(false);\n          }\n        });\n      break;\n      case 'Nearby':\n        setTypeRequset('Nearby');\n        getNearbyCities(lastCoords.current).then((response: IDataCity) => {\n          if (response.cod === '200') {\n            setDataCity(response);\n            setLoadingCard(false);\n          } else {\n            console.log('Error');\n            setLoadingMain(false);\n            setLoadingCard(false);\n            setTrueInfo(false);\n          }\n        });\n      break;\n    }\n  }\n\n  return (\n    <Context.Provider value={{ dataPosition: dataPosition, updateData: updateData, dataCity: dataCity, loadingCards: loadingCards, updateWeatherCards: updateWeatherCards, loadingMain: loadingMain , typeRequset: typeRequset , trueInfo: trueInfo}}>\n      <section className={styles.wrapper}>\n        <div className={styles.background}>\n          {dots().map((item: number) => <Dots key={item} />)}\n        </div>\n        <div className={styles.container}>\n          <HourlyForecast />\n          <CurrentWeather />\n        </div>\n      </section>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport WebFont from \"webfontloader\";\n\nWebFont.load({\n  google: {\n    families: [\"Inter:wght@100;200;300;400;500;600;700;800;900&display=swap\"],\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}