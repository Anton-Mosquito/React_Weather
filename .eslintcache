[{"E:\\work\\React\\weather\\src\\index.tsx":"1","E:\\work\\React\\weather\\src\\reportWebVitals.ts":"2","E:\\work\\React\\weather\\src\\App.tsx":"3","E:\\work\\React\\weather\\src\\hooks\\useCurrentLocation.tsx":"4","E:\\work\\React\\weather\\src\\constant\\option.tsx":"5","E:\\work\\React\\weather\\src\\constant\\defaultCoords.tsx":"6","E:\\work\\React\\weather\\src\\components\\hourlyForecast\\hourlyForecast.tsx":"7","E:\\work\\React\\weather\\src\\components\\currentWeather\\currentWeather.tsx":"8","E:\\work\\React\\weather\\src\\components\\currentWeather\\header\\header.tsx":"9","E:\\work\\React\\weather\\src\\components\\currentWeather\\search\\search.tsx":"10","E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description.tsx":"11","E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__header\\description__header.tsx":"12","E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__card\\description__card.tsx":"13","E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__card\\TemperatuteField\\temperatuteField.tsx":"14","E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__card\\descriptionList\\descriptionList.tsx":"15","E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__card\\descriptionList\\descriptionListItem\\DescriptionListItem.tsx":"16","E:\\work\\React\\weather\\src\\constant\\quantityOfDots.tsx":"17","E:\\work\\React\\weather\\src\\components\\dots\\dots.tsx":"18","E:\\work\\React\\weather\\src\\context\\context.tsx":"19","E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__card\\ImageField\\ImageField.tsx":"20","E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__card\\descriptionList\\descriptionListItem\\descriptionListItem.tsx":"21","E:\\work\\React\\weather\\src\\services\\requestCurrentWeather.tsx":"22","E:\\work\\React\\weather\\src\\services\\requestWeatherByCity.tsx":"23","E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastHeader\\ForecastHeader.tsx":"24","E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastList.tsx":"25","E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\forecastListItem.tsx":"26","E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\dataListField\\dataListField.tsx":"27","E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\dateField\\dateField.tsx":"28","E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\imageField\\ImageField.tsx":"29","E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\dataListField\\dataListFieldItem\\dataListFieldItem.tsx":"30","E:\\work\\React\\weather\\src\\components\\loader\\loader.tsx":"31","E:\\work\\React\\weather\\src\\services\\requestNearbyCities.tsx":"32","E:\\work\\React\\weather\\src\\components\\currentWeather\\search\\searchBox\\searchBox.tsx":"33","E:\\work\\React\\weather\\src\\components\\currentWeather\\search\\radioBox\\radioBox.tsx":"34","E:\\work\\React\\weather\\src\\components\\currentWeather\\search\\radioBox\\radioItems\\radioItems.tsx":"35","E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\cityField\\cityField.tsx":"36","E:\\work\\React\\weather\\src\\components\\spinner\\spinner.tsx":"37","E:\\work\\React\\weather\\src\\components\\404\\404.tsx":"38"},{"size":654,"mtime":1612104298163,"results":"39","hashOfConfig":"40"},{"size":425,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":5800,"mtime":1612859850397,"results":"42","hashOfConfig":"40"},{"size":932,"mtime":1612639903078,"results":"43","hashOfConfig":"40"},{"size":262,"mtime":1612180852744,"results":"44","hashOfConfig":"40"},{"size":142,"mtime":1612361182253,"results":"45","hashOfConfig":"40"},{"size":387,"mtime":1612447548480,"results":"46","hashOfConfig":"40"},{"size":695,"mtime":1612859464819,"results":"47","hashOfConfig":"40"},{"size":214,"mtime":1612274866760,"results":"48","hashOfConfig":"40"},{"size":1506,"mtime":1612789313818,"results":"49","hashOfConfig":"40"},{"size":354,"mtime":1612278554963,"results":"50","hashOfConfig":"40"},{"size":570,"mtime":1612512519652,"results":"51","hashOfConfig":"40"},{"size":633,"mtime":1612512726173,"results":"52","hashOfConfig":"40"},{"size":436,"mtime":1612512759562,"results":"53","hashOfConfig":"40"},{"size":2345,"mtime":1612798798786,"results":"54","hashOfConfig":"40"},{"size":871,"mtime":1612278133802,"results":"55","hashOfConfig":"40"},{"size":176,"mtime":1612179305493,"results":"56","hashOfConfig":"40"},{"size":74,"mtime":1612179496066,"results":"57","hashOfConfig":"40"},{"size":416,"mtime":1612856532794,"results":"58","hashOfConfig":"40"},{"size":653,"mtime":1612512788431,"results":"59","hashOfConfig":"40"},{"size":2415,"mtime":1612514801180,"results":"60","hashOfConfig":"40"},{"size":772,"mtime":1612859931406,"results":"61","hashOfConfig":"40"},{"size":713,"mtime":1612859944605,"results":"62","hashOfConfig":"40"},{"size":603,"mtime":1612798444630,"results":"63","hashOfConfig":"40"},{"size":927,"mtime":1612860165172,"results":"64","hashOfConfig":"40"},{"size":1759,"mtime":1612788978920,"results":"65","hashOfConfig":"40"},{"size":1116,"mtime":1612521681717,"results":"66","hashOfConfig":"40"},{"size":351,"mtime":1612788616986,"results":"67","hashOfConfig":"40"},{"size":485,"mtime":1612521375856,"results":"68","hashOfConfig":"40"},{"size":1314,"mtime":1612521960782,"results":"69","hashOfConfig":"40"},{"size":402,"mtime":1612522829770,"results":"70","hashOfConfig":"40"},{"size":742,"mtime":1612788096253,"results":"71","hashOfConfig":"40"},{"size":765,"mtime":1612793975250,"results":"72","hashOfConfig":"40"},{"size":497,"mtime":1612794436316,"results":"73","hashOfConfig":"40"},{"size":579,"mtime":1612794577480,"results":"74","hashOfConfig":"40"},{"size":248,"mtime":1612789238904,"results":"75","hashOfConfig":"40"},{"size":129,"mtime":1612797197944,"results":"76","hashOfConfig":"40"},{"size":657,"mtime":1612859034344,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1w7umxe",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"E:\\work\\React\\weather\\src\\index.tsx",[],["157","158"],"E:\\work\\React\\weather\\src\\reportWebVitals.ts",[],"E:\\work\\React\\weather\\src\\App.tsx",["159","160"],"import React, { useState, useEffect, useRef } from 'react';\nimport useCurrentLocation from './hooks/useCurrentLocation';\nimport getWeather from \"./services/requestCurrentWeather\";\nimport getWet from './services/requestWeatherByCity';\n\nimport { CurrentWeather } from './components/currentWeather/currentWeather';\nimport { Dots } from './components/dots/dots';\nimport { HourlyForecast } from './components/hourlyForecast/hourlyForecast';\n\n\nimport { geolocationOptions } from \"./constant/option\";\nimport { defaultCoords } from \"./constant/defaultCoords\";\nimport { dots } from './constant/quantityOfDots'\n\nimport { Context } from \"./context/context\";\n\nimport { ICoords } from './models/coords.model';\nimport { IDataCity } from './models/dataCity.model';\nimport IDataPosition from './models/dataPosition.model';\n\nimport './App.scss';\nimport getNearbyCities from './services/requestNearbyCities';\n\nexport const App: React.FC = () => {\n  const { location: currentLocation, error: currentError } = useCurrentLocation(geolocationOptions);\n  const [dataPosition, setDataPosition] = React.useState<IDataPosition>();\n  const [dataCity, setDataCity] = React.useState<IDataCity>();\n  const [loadingCards, setLoadingCard] = React.useState(true);\n  const [loadingMain, setLoadingMain] = React.useState(true);\n  const [trueInfo, setTrueInfo] = React.useState(true);\n  const [typeRequset, setTypeRequset] = React.useState('Hourly');\n\n  const lastCoords = useRef(defaultCoords);\n  const lastCity = useRef('');\n\n  useEffect(() => {\n    if (currentLocation) {\n      getWeather(currentLocation).then((result: IDataPosition) => {\n        if (result.cod === 200) {\n          setDataPosition(result);\n          setLoadingMain(false);\n          lastCity.current = result.name;\n          getWet(result.name).then((response: IDataCity) => {\n            setDataCity(response)\n            setLoadingCard(false);\n          });\n          \n        }\n        else {\n          console.log('Error' , currentError );\n        }\n      })\n        .catch(e => console.log('Error behind promise!', e));\n      lastCoords.current = currentLocation;\n    } else {\n      getWeather(defaultCoords).then((result: IDataPosition) => {\n        if (result.cod === 200) {\n          setDataPosition(result);\n          setLoadingMain(false);\n          lastCity.current = result.name;\n          getWet(result.name).then((response: IDataCity) => {\n            setDataCity(response)\n            setLoadingCard(false);\n          });\n        } else {\n          console.log('Error' , result.message);\n        }\n      })\n      lastCoords.current = defaultCoords;\n    }\n  }, [currentLocation]);\n\n\n  const updateData = (city: string): void => {\n    setLoadingCard(true);\n    setLoadingMain(true);\n    switch (typeRequset) {\n      case 'Hourly':\n        getWet(city).then((response: IDataCity) => {\n          if (response.cod === '200') { \n            const updatedCoords: ICoords = response.city.coord;\n            lastCoords.current = updatedCoords;\n            lastCity.current = response.city.name;\n            getWeather(updatedCoords).then((result: IDataPosition) => {\n              setTrueInfo(true);\n              setDataPosition(result);\n              setLoadingMain(false);\n              setLoadingCard(false);\n            });\n            setDataCity(response);\n          } else {\n            console.log('Error');\n            setLoadingMain(false);\n            setLoadingCard(false);\n            setTrueInfo(false);\n          }\n        });\n      break;\n      case 'Nearby':\n        getWet(city).then((response: IDataCity) => {\n          if (response.cod === '200') { \n            const updatedCoords: ICoords = response.city.coord;\n            lastCoords.current = updatedCoords;\n            lastCity.current = response.city.name;\n            getWeather(updatedCoords).then((result: IDataPosition) => {\n              setTrueInfo(true);\n              setDataPosition(result);\n              setLoadingMain(false);\n              updateWeatherCards('Nearby');\n            });\n          } else {\n            console.log('Error');\n            setLoadingCard(false);\n            setLoadingMain(false);\n            setTrueInfo(false);\n          }\n        });\n      break;\n    }\n  \n  };\n\n  const updateWeatherCards = (flag: string): void => {\n    setTrueInfo(true);\n    setLoadingCard(true);\n    switch (flag) {\n      case 'Hourly':\n        setTypeRequset('Hourly');\n        getWet(lastCity.current).then((response: IDataCity) => {\n          if (response.cod === '200') {\n            setDataCity(response);\n            setLoadingCard(false);\n          } else {\n            console.log('Error');\n            setLoadingMain(false);\n            setLoadingCard(false);\n            setTrueInfo(false);\n          }\n        });\n      break;\n      case 'Nearby':\n        setTypeRequset('Nearby');\n        getNearbyCities(lastCoords.current).then((response: IDataCity) => {\n          if (response.cod === '200') {\n            setDataCity(response);\n            setLoadingCard(false);\n          } else {\n            console.log('Error');\n            setLoadingMain(false);\n            setLoadingCard(false);\n            setTrueInfo(false);\n          }\n        });\n      break;\n    }\n  }\n\n  return (\n    <Context.Provider value={{ dataPosition: dataPosition, updateData: updateData, dataCity: dataCity, loadingCards: loadingCards, updateWeatherCards: updateWeatherCards, loadingMain: loadingMain , typeRequset: typeRequset , trueInfo: trueInfo}}>\n      <section className=\"wrapper\">\n        <div className=\"background\">\n          {dots().map((item: number) => <Dots key={item} />)}\n        </div>\n        <div className=\"container\">\n          <HourlyForecast />\n          <CurrentWeather />\n        </div>\n      </section>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","E:\\work\\React\\weather\\src\\hooks\\useCurrentLocation.tsx",[],"E:\\work\\React\\weather\\src\\constant\\option.tsx",[],"E:\\work\\React\\weather\\src\\constant\\defaultCoords.tsx",[],"E:\\work\\React\\weather\\src\\components\\hourlyForecast\\hourlyForecast.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\currentWeather.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\header\\header.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\search\\search.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__header\\description__header.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__card\\description__card.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__card\\TemperatuteField\\temperatuteField.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__card\\descriptionList\\descriptionList.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__card\\descriptionList\\descriptionListItem\\DescriptionListItem.tsx",[],"E:\\work\\React\\weather\\src\\constant\\quantityOfDots.tsx",[],"E:\\work\\React\\weather\\src\\components\\dots\\dots.tsx",[],"E:\\work\\React\\weather\\src\\context\\context.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__card\\ImageField\\ImageField.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\description\\description__card\\descriptionList\\descriptionListItem\\descriptionListItem.tsx",[],"E:\\work\\React\\weather\\src\\services\\requestCurrentWeather.tsx",[],"E:\\work\\React\\weather\\src\\services\\requestWeatherByCity.tsx",[],"E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastHeader\\ForecastHeader.tsx",[],"E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastList.tsx",[],"E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\forecastListItem.tsx",[],"E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\dataListField\\dataListField.tsx",[],"E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\dateField\\dateField.tsx",[],"E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\imageField\\ImageField.tsx",[],"E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\dataListField\\dataListFieldItem\\dataListFieldItem.tsx",[],["161","162"],"E:\\work\\React\\weather\\src\\components\\loader\\loader.tsx",[],"E:\\work\\React\\weather\\src\\services\\requestNearbyCities.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\search\\searchBox\\searchBox.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\search\\radioBox\\radioBox.tsx",[],"E:\\work\\React\\weather\\src\\components\\currentWeather\\search\\radioBox\\radioItems\\radioItems.tsx",[],"E:\\work\\React\\weather\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\cityField\\cityField.tsx",[],"E:\\work\\React\\weather\\src\\components\\spinner\\spinner.tsx",[],"E:\\work\\React\\weather\\src\\components\\404\\404.tsx",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":71,"column":6,"nodeType":"173","endLine":71,"endColumn":23,"suggestions":"174"},{"ruleId":"163","replacedBy":"175"},{"ruleId":"165","replacedBy":"176"},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentError'. Either include it or remove the dependency array.","ArrayExpression",["179"],["177"],["178"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},"Update the dependencies array to be: [currentError, currentLocation]",{"range":"182","text":"183"},[2611,2628],"[currentError, currentLocation]"]